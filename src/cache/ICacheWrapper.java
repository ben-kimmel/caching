package cache;

import java.util.List;

import cache.internal.ICacheInternal;
import cache.logging.LogEntry;

/**
 * The wrapper class for all of the internal cache components. ICacheWrappers
 * are responsible for handling requests and providing log information.
 * 
 * @author Ben Kimmel
 *
 */
public interface ICacheWrapper {

	/**
	 * Checks to see if the given block ID is contained in the internal cache
	 * representation. Also executes all {@link ICacheStep} based on their
	 * priority and generates a {@link LogEntry}.
	 * 
	 * @param blockID
	 *            The block ID to request from the cache
	 * @return Whether or not the given block ID is contained in the cache
	 */
	public boolean requestBlock(int blockID);

	/**
	 * Checks to see if the given block ID is contained in the internal cache
	 * representation. Differs from {@link #requestBlock()} in that it does not
	 * elicit side effects, such as calling on cache steps or generating a
	 * {@link LogEntry}.
	 * 
	 * @param blockID
	 *            The block ID to request from the cache
	 * @return Whether or not the given block ID is contained in the cache
	 */
	public boolean softRequest(int blockID);

	/**
	 * Provides the {@link ICacheInternal} implementation to be
	 * used as the internal representation of the cache. Must be provided before
	 * the ICacheWrapper is functional.
	 * 
	 * @param cache
	 *            The ICacheInternal implementation to be used by the
	 *            ICacheWrapper
	 */
	public void provideCacheImplementation(ICacheInternal cache);

	/**
	 * Provides a {@link ICacheStep} to the request execution process. Any
	 * number of these may be added, but they are not needed for the cache to
	 * run without error.
	 * 
	 * @param step
	 *            The ICacheStep to be executed during requests
	 */
	public void provideCacheStep(ICacheStep step);

	/**
	 * Returns a list of all {@link LogEntry} generated by
	 * requests.
	 * 
	 * @return A list of all LogEntries generated by requests. Will return null
	 *         if no requests have been processed
	 */
	public List<LogEntry> getLog();

}